<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <!-- Unique identifier of the plugin. It should be FQN. It cannot be changed between the plugin versions. -->
    <id>se.clau.ironclad</id>

    <!-- Public plugin name should be written in Title Case.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-name -->
    <name>Ironclad Erlang</name>

    <!-- A displayed Vendor name or Organization ID displayed on the Plugins Page. -->
    <vendor email="dmytro.lytovchenko@gmail.com" url="https://ironclad.clau.se">Dmytro Lytovchenko</vendor>

    <!-- Description of the plugin displayed on the Plugin Page and IDE Plugin Manager.
         Simple HTML elements (text formatting, paragraphs, and lists) can be added inside of <![CDATA[ ]]> tag.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-description -->
    <description><![CDATA[
      IDE support for Erlang language, with type inference and validation.
    ]]></description>

    <!-- Product and plugin compatibility requirements.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->
    <depends>com.intellij.modules.platform</depends>

    <!-- Extension points defined by the plugin.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-extension-points.html -->
    <extensions defaultExtensionNs="com.intellij">
        <!-- Parser -->
        <lang.parserDefinition language="Erlang"
                               implementationClass="se.clau.ironclad.language.ErlangParserDefinition"/>
        <lang.parserDefinition language="Erlang Header"
                               implementationClass="se.clau.ironclad.language.ErlangHeaderParserDefinition"/>
        <lang.parserDefinition language="Erlang Escript"
                               implementationClass="se.clau.ironclad.language.ErlangEscriptParserDefinition"/>
        <lang.parserDefinition language="Erlang Terms"
                               implementationClass="se.clau.ironclad.language.ErlangTermsParserDefinition"/>

        <stubElementTypeHolder class="se.clau.ironclad.language.ErlangElementTypes"/>

        <!-- File Type factory -->
        <fileType name="Erlang"
                  language="Erlang"
                  implementationClass="se.clau.ironclad.filetype.ErlangFileType"
                  extensions="erl"/>
        <internalFileTemplate name="Erlang File"/>

        <fileType name="Erlang Include Header"
                  language="Erlang Header"
                  implementationClass="se.clau.ironclad.filetype.ErlangHeaderFileType"
                  extensions="hrl"/>

        <!--        <fileType name="Erlang Rebar Config"-->
        <!--                  language="Erlang"-->
        <!--                  implementationClass="se.clau.ironclad.filetype.ErlangRebarConfigFileType"-->
        <!--                  extensions="rebar.config"/>-->
        <!--        <internalFileTemplate name="Erlang Rebar Config"/>-->

        <fileType name="Erlang Escript"
                  language="Erlang Escript"
                  implementationClass="se.clau.ironclad.filetype.ErlangEscriptFileType"
                  extensions="escript;script;esh"/>
        <internalFileTemplate name="Erlang Escript"/>

        <fileType name="Erlang Terms/Config"
                  language="Erlang Terms"
                  implementationClass="se.clau.ironclad.filetype.ErlangTermsFileType"
                  extensions="config;app.src;app"
                  patterns="*.app.src;*.config;*.app"/>

        <!--        <fileType name="Erlang Rebar Config"-->
        <!--                  language="Erlang Rebar Config"-->
        <!--                  implementationClass="se.clau.ironclad.filetype.ErlangRebarConfigFileType"-->
        <!--                  extensions="rebar.config"/>-->
    </extensions>

    <actions>
        <action id="Erlang.NewErlangFile"
                class="se.clau.ironclad.actions.ErlangCreateFileAction">
            <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFile"/>
        </action>
        <action id="Erlang.NewErlangEscriptFile"
                class="se.clau.ironclad.actions.ErlangEscriptCreateFileAction">
            <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFile"/>
        </action>
    </actions>
</idea-plugin>